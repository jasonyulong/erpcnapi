<?php
/**
 * @Copyright (C), 2018-2019, 卓士网络科技有限公司, shawn.sean@foxmail.com
 * @Name orderScanStatisticsController.class.php
 * @Author Shawn
 * @Version v1.0
 * @Date: 2019/4/8
 * @Time: 9:16
 * @Description 订单扫描统计
 */

namespace Package\Controller;
use Common\Controller\CommonController;
use Package\Model\ApiOrderWeightModel;
use Package\Model\ErpEbayUserModel;

class OrderScanStatisticsController extends CommonController
{
    /**
     * 当前仓库id
     * @var int
     */
    private $currStoreId  = 196;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $currStoreId    = C("CURRENT_STORE_ID");
        if(!empty($currStoreId)){
            $this->currStoreId = $currStoreId;
        }
    }

    /**
     * @desc 订单扫描统计首页
     * @author Shawn
     * @date 2019/4/8
     */
    public function index()
    {
        $beginTime = strtotime($_REQUEST['timeArea_start']);
        $endTime = strtotime($_REQUEST['timeArea_end']);
        $day = ceil(($endTime-$beginTime)/86400);
        if($day > 31){
            exit("查询区间请勿超过一个月");
        }
        $timeArea = $this->getStatisticArea($rawTimeCondition);
        $store = isset($_POST['store']) ? (int)$_POST['store'] : $this->currStoreId;//默认1号仓
        $map = [
            'scantime' => ['between', $timeArea],
        ];
        //显示查询时间内日期
        $dateData = $this->showEveryDayDetail($timeArea[0],$timeArea[1]);
        $data = $this->getScanDetailData($map);
        $this->assign("rawCondition", $rawTimeCondition);
        $this->assign("countsArr", $data['countsArr']);
        $this->assign("dateData", $dateData);
        $this->assign("data", $data['data']);
        $this->display();
    }

    private function getScanDetailData($map)
    {
        //查询从库
        $apiOrderWeightModel = new ApiOrderWeightModel("","","DB_CONFIG_READ");
        //这段时间内的拣货人哪些天有数据
        $field = "from_unixtime(scantime, '%Y-%m-%d') as time_date,count(id) as cc,scan_user";
        $countResult = $apiOrderWeightModel->where($map)->group('scan_user,time_date')->field($field)->select();
        $timeCounts = $apiOrderWeightModel->where($map)->group('time_date')->field($field)->select();
        $countsArr     = [];
        foreach ($timeCounts as $counts) {
            $countsArr['arr'][$counts['time_date']] = (int)$counts['cc'];
        }
        foreach ($countResult as &$v){
            $v['scan_user'] = strtoupper($v['scan_user']);
        }
        $pkuser = array_unique(array_column($countResult, 'scan_user'));
        $dataArr = [];
        $userIdModel = new ErpEbayUserModel("","",C('DB_CONFIG_READ'));
        //找到用户id
        foreach ($pkuser as $key => $val) {
            $userId        = $userIdModel->where(['username' => $val])->getField("id");
            $dataArr[$val] = [];
            foreach ($countResult as $reKey => $reVal) {
                if ($reVal['scan_user'] == $val) {
                    $dataArr[$val]['scanId']                 = (int)$userId;
                    $dataArr[$val]['arr'][$reVal['time_date']] = (int)$reVal['cc'];
                }
            }
        }
        $data['countsArr'] = $countsArr;
        $data['data'] = $dataArr;
        return $data;
    }

    /**
     * @desc 导出数据
     * @author Shawn
     * @date 2019/4/8
     */
    public function exportStatistics()
    {
        set_time_limit(0);
        ini_set('memory_limit', '1024M');
        $beginTime = strtotime($_REQUEST['timeArea_start']);
        $endTime = strtotime($_REQUEST['timeArea_end']);
        $day = ceil(($endTime-$beginTime)/86400);
        $maxDay = 31;
        if($day > $maxDay){
            exit("导出区间请勿超过一个月");
        }
        $timeArea = $this->getStatisticArea($rawTimeCondition);
        $map = [
            'scantime' => ['between', $timeArea],
        ];
        //获取导出数据
        $data = $this->getScanDetailData($map);
        $timeData = $this->showEveryDayDetail($timeArea[0],$timeArea[1]);
        Vendor('PHPExcel.PHPExcel');
        Vendor('PHPExcel.PHPExcel.IOFactory');
        $objPHPExcel = new \PHPExcel();
        $objPHPExcel->getProperties()->setCreator("Maarten Balliauw")
            ->setLastModifiedBy("Maarten Balliauw")
            ->setTitle("Office 2007 XLSX Test Document")
            ->setSubject("Office 2007 XLSX Test Document")
            ->setDescription("Test document for Office 2007 XLSX, generated using PHP classes.")
            ->setKeywords("office 2007 openxml php")
            ->setCategory("FILE");
        //循环设置第一列excel数据
        $letter = range('A','Z');
        $j = 0;
        $m = 0;
        $reset = false;
        $over = false;
        $todayData = [];
        for($i=0;$i<35;$i++){
            if($over){
                continue;
            }
            //重置
            if($i > 25 && $reset == false){
                $reset = true;
                $m = 0;
            }
            $str = ($i > 25) ? 'A' : '';
            $dis = $str.$letter[$m];
            $col = $dis."1";
            $title = '';
            if($i == 0){
                $title = '序号';
            }
            if($i == 1){
                $title = '扫描人\日期';
            }
            if($i > 1){
                if(!isset($timeData[$j])){
                    $over = true;
                    $title = "合计";
                    $todayData[$dis] = 'total';
                }else{
                    $title = $timeData[$j];
                    $todayData[$dis] = $timeData[$j];
                }
                $j++;
            }
            $m++;
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($col, $title);
            $objPHPExcel->setActiveSheetIndex(0)->getColumnDimension($dis)->setWidth(20);
        }
        //设置excel表格数据
        $l = 2;
        $number = 1;
        foreach ($data['data'] as $key=>$value){
            $begin = 'A' . $l;
            $second = 'B'.$l;
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($begin, $number);
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($second, $key.'（'.$value['scanId'].'）');
            $count = 0;
            foreach ($todayData as $k=>$day){
                $col = $k.$l;
                if(in_array($day,array_keys($value['arr']))){
                    $num = $value['arr'][$day];
                    $count = $count + $num;
                }else{
                    if($day == "total"){
                        $num = $count;
                    }else{
                        $num = 0;
                    }
                }
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue($col, $num);
            }
            $l++;
            $number++;
        }
        $l++;
        //合计
        $last = 'A'.$l;
        $lastB = 'B'.$l;
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($last, '');
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($lastB, '合计');
        $counts = 0;
        foreach ($todayData as $k => $day) {
            $col = $k . $l;
            if (in_array($day, array_keys($data['countsArr']['arr']))) {
                $num = $data['countsArr']['arr'][$day];
                $counts = $counts + $num;
            } else {
                if ($day == "total") {
                    $num = $counts;
                } else {
                    $num = 0;
                }
            }
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($col, $num);
        }
        $title = "订单扫描统计导出文档-" . date('Y-m-d');
        $titlename = "订单扫描统计导出文档-" . date('Y-m-d') . ".xls";
        $objPHPExcel->getActiveSheet()->setTitle($title);
        $objPHPExcel->setActiveSheetIndex(0);
        header('Content-Type: application/vnd.ms-excel');
        header("Content-Disposition: attachment;filename={$titlename}");
        header("Content-Type: application/force-download");
        header("Content-Type: application/octet-stream");
        header("Content-Type: application/download");
        header("Content-Transfer-Encoding: binary");
        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
    }

    /**
     * @desc 查询条件
     * @param string $rawCondition
     * @return array
     * @author Shawn
     * @date 2019/4/8
     */
    private function getStatisticArea(&$rawCondition = '')
    {
        $rawCondition = $_REQUEST;

        if ($rawCondition['timeArea_start'] && $rawCondition['timeArea_end']) {
            $timeAreaCondition = [
                strtotime($rawCondition['timeArea_start'] . ' 00:00:00'),
                strtotime($rawCondition['timeArea_end'] . ' 23:59:59')
            ];
        } else {
            $rawCondition['timeArea_start'] = date('Y-m-d', strtotime('-10 days'));
            $rawCondition['timeArea_end'] = date('Y-m-d');

            $timeAreaCondition = [
                strtotime(date('Y-m-d', strtotime('-10 days')) . ' 00:00:00'),
                strtotime(date('Y-m-d') . ' 23:59:59')
            ];
        }
        return $timeAreaCondition;
    }

    /**
     * @desc 根据选择时间段显示详细日期
     * @param $start
     * @param $end
     * @return array
     * @author Shawn
     * @date 2019/4/8
     */
    private function showEveryDayDetail($start, $end)
    {
        //根据选择时间范围，展示每一天的数据
        $year = date("Y", $start);
        $month = date("m", $start);
        $day = date("d", $start);
        $j = 0;
        $today = array();
        for ($i = $start; $i < $end; $i += 86400) {
            $y = mktime(0, 0, 0, $month, $day, $year);
            $today[$j] = date("Y-m-d", $y + $j * 24 * 3600);
            $j++;
        }
        return $today;

    }

    /**
     * @desc 获取统计数量
     * @author Shawn
     * @date 2019/4/8
     */
    public function getScanCount()
    {
        $timeArea = $this->getStatisticArea($rawTimeCondition);
        $apiOrderWeightModel = M("api_orderweight_1","","DB_CONFIG_READ");
        $map = [
            'a.scantime' => ['between', $timeArea],
            "b.ebay_id" => ['exp',"is null"]
        ];
        $badData = $apiOrderWeightModel->alias("a")
            ->join("left join api_orderweight b using(ebay_id)")
            ->where($map)
            ->field("count(a.ebay_id) as cc")
            ->find();
        $cMap['scantime'] =  ['between', $timeArea];
        $countData = $apiOrderWeightModel->where($cMap)->field("count(ebay_id) as cc")->find();
        $this->ajaxReturn(['status'=>1,'badCount'=>(int)$badData['cc'],'count'=>(int)$countData['cc']]);
    }

}