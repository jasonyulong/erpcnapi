<?php
/**
 * Created by PhpStorm.
 * User: leo
 * Date: 2017/11/2
 * Time: 16:20
 */

namespace Task\Controller;

use Common\Model\EbayOrderExtModel;
use Order\Model\EbayOrderModel;
use Package\Model\ApiCheckskuModel;
use Think\Controller;

class ApiCheckSkuTaskController extends Controller
{


    /**
     * php tcli.php Task/ApiCheckSkuTask/clearTwoMAgo
     * @desc 清理api_checksku 表两个月之前的数据
     * @Author leo
     */
    public function clearTwoMAgo()
    {
        $clear_time =  strtotime('-2 month');
        $map = ['addtime'=>['lt',$clear_time]];
        $checkSkuModel = new ApiCheckskuModel();
        $count = $checkSkuModel->where($map)->count();

        echo $checkSkuModel->getLastSql()."\n";
        echo $count."\n";
        $size = 10000;
        $num = ceil($count/$size);
        echo "共 {$num} 组 \n";

        for($i = 0; $i < $num; $i++)
        {

            $idArr = $checkSkuModel->where($map)->limit($size)->getField('id',true);

            if(empty($idArr)){
                print_r($idArr);
                continue;
            }

            $rs = $checkSkuModel->where(['id'=>['in',$idArr]])->delete();

            if($rs){
                echo $i.'组--success'." {$i}*{$size}, {$size} \n";
            }else{
                echo $i.'组--error'."\n";
            }
            if ($i % 10== 0)
            {
                sleep(1);
            }

            usleep(500000);
        }


        echo "success " . date('Y-m-d H:i:s');
        return true;
    }



    //  Task/ApiCheckSkuTask/fixed
    public function fixed() {

        $rsData = [16068250, 16068252, 16068240, 16068242, 16068230, 16068232, 16068220, 16068222, 16068249, 16068255, 16068210, 16068212, 16068239, 16068245, 16068202, 16068235, 16068229, 16068200, 16068192, 16068219, 16068225, 16068209, 16068182, 16068190, 16068215, 16068205, 16068172, 16068199, 16068180, 16068195, 16068162, 16068189, 16068185, 16068251, 16068254, 16068152, 16068257, 16068170, 16068175, 16068244, 16068142, 16068179, 16068241, 16068247, 16068165, 16068234, 16068132, 16068169, 16068155, 16068224, 16068237, 16068160, 16068231, 16068122, 16068227, 16068145, 16068159, 16068214, 16068217, 16068135, 16068150, 16068112, 16068149, 16068221, 16068204, 16068207, 16068125, 16068140, 16068248, 16068256, 16068102, 16068139, 16068197, 16068115, 16068194, 16068211, 16068130, 16068092, 16068238, 16068246, 16068187, 16068184, 16068105, 16068129, 16068082, 16068201, 16068120, 16068177, 16068095, 16068228, 16068119, 16068174, 16068236, 16068072, 16068167, 16068191, 16068110, 16068109, 16068085, 16068062, 16068218, 16068164, 16068157, 16068099, 16068075, 16068226, 16068154, 16068181, 16068147, 16068089, 16068208, 16068065, 16068052, 16068216, 16068100, 16068144, 16068079, 16068137, 16068171, 16068055, 16068198, 16068042, 16068134, 16068206, 16068127, 16068069, 16068032, 16068124, 16068045, 16068090, 16068188, 16068253, 16068117, 16068196, 16068022, 16068059, 16068114, 16068161, 16068035, 16068107, 16068012, 16068049, 16068104, 16068080, 16068025, 16068186, 16068097, 16068002, 16068039, 16068094, 16068015, 16068029, 16068087, 16068243, 16068070, 16068178, 16068151, 16067992, 16068176, 16068084, 16068005, 16068077, 16068233, 16068019, 16068168, 16068060, 16067982, 16068141, 16068074, 16067995, 16068166, 16068067, 16068223, 16067972, 16068050, 16068009, 16068158, 16068131, 16068064, 16068156, 16067985, 16068057, 16067962, 16068040, 16068148, 16067999, 16068054, 16068121, 16067975, 16068047, 16068146, 16068138, 16068030, 16067952, 16067989, 16068044, 16067965, 16068037, 16068111, 16067942, 16067979, 16068128, 16068020, 16068027, 16067955, 16068136, 16068034, 16067932, 16067969, 16068101, 16068017, 16068118, 16067945, 16068010, 16068126, 16067959, 16067922, 16068091, 16068108, 16068000, 16068007, 16068116, 16068024, 16067935, 16067912, 16068081, 16067997, 16068098, 16067949, 16067990, 16068014, 16068106, 16067925, 16068071, 16068096, 16067915, 16068213, 16067987, 16068088, 16067980, 16067939, 16067902, 16068086, 16068078, 16067977, 16067929, 16067970, 16068004, 16068061, 16067892, 16068068, 16068076, 16067967, 16067960, 16067994, 16067882, 16068051, 16068058, 16068066, 16067905, 16067984, 16067950, 16067957, 16067872, 16067919, 16067895, 16068048, 16067974, 16068203, 16068056, 16067947, 16067885, 16067964, 16068193, 16067909, 16067937, 16068046, 16067954, 16067875, 16067927, 16068183, 16067899, 16068041, 16068036, 16067944, 16067940, 16067865, 16067862, 16068173, 16067889, 16068038, 16067917, 16068031, 16068026, 16067934, 16067855, 16068163, 16067930, 16067852, 16067879, 16068028, 16067907, 16067845, 16068021, 16067924, 16068016, 16067920, 16068153, 16067869, 16067842, 16068018, 16067835, 16068011, 16067897, 16067914, 16067910, 16068006, 16067859, 16067825, 16068143, 16068001, 16068008, 16067832, 16067887, 16067996, 16067900, 16067904, 16067815, 16067849, 16067822, 16067991, 16068133, 16067998, 16067805, 16067890, 16067981, 16067894, 16067839, 16067812, 16067877, 16068123, 16067986, 16067988, 16067795, 16067880, 16067971, 16067884, 16067802, 16067829, 16068113, 16067867, 16067976, 16067978, 16067785, 16067961, 16067870, 16067874, 16067792, 16068103, 16067819, 16067857, 16067966, 16067775, 16067968, 16067864, 16067951, 16067782, 16067860, 16067809, 16068093, 16067956, 16067765, 16067958, 16067847, 16067854, 16067799, 16067850, 16067772, 16067941, 16067755, 16068083, 16067789, 16067837, 16067946, 16067931, 16067844, 16067948, 16067840, 16067762, 16067745, 16067779, 16067827, 16068073, 16067830, 16067834, 16067936, 16067938, 16067921, 16067752, 16067769, 16067735, 16068063, 16067926, 16067911, 16067824, 16067928, 16067817, 16067820, 16067759, 16067742, 16067725, 16067901, 16068053, 16067916, 16067807, 16067814, 16067918, 16067810, 16067749, 16067732, 16067891, 16067715, 16068043, 16067906, 16067797, 16067739, 16067800, 16067722, 16067881, 16067705, 16067896, 16067790, 16068033, 16067729, 16067787, 16067804, 16067908, 16067871, 16067712, 16067695, 16067886, 16067719, 16067777, 16067780, 16067709, 16067861, 16067767, 16068023, 16067702, 16067898, 16067794, 16067699, 16067851, 16067685, 16067876, 16067770, 16067757, 16068013, 16067692, 16067888, 16067689, 16067675, 16067784, 16067760, 16067747, 16067866, 16068003, 16067682, 16067679, 16067841, 16067878, 16067750, 16067665, 16067774, 16067737, 16067856, 16067993, 16067740, 16067655, 16067672, 16067669, 16067868, 16067764, 16067831, 16067727, 16067846, 16067730, 16067645, 16067662, 16067983, 16067754, 16067821, 16067858, 16067659, 16067717, 16067720, 16067635, 16067652, 16067836, 16067811, 16067848, 16067973, 16067649, 16067744, 16067710, 16067707, 16067642, 16067625, 16067826, 16067801, 16067838, 16067639, 16067700, 16067734, 16067697, 16067632, 16067963, 16067816, 16067791, 16067615, 16067828, 16067629, 16067690, 16067687, 16067806, 16067724, 16067781, 16067622, 16067818, 16067619, 16067796, 16067677, 16067771, 16067680, 16067612, 16067808, 16067714, 16067761, 16067667, 16067609, 16067605, 16067953, 16067670, 16067602, 16067798, 16067704, 16067751, 16067657, 16067595, 16067788, 16067943, 16067786, 16067599, 16067592, 16067694, 16067660, 16067741, 16067778, 16067585, 16067933, 16067647, 16067776, 16067684, 16067589, 16067582, 16067650, 16067768, 16067731, 16067575, 16067923, 16067637, 16067674, 16067766, 16067579, 16067572, 16067758, 16067721, 16067565, 16067913, 16067756, 16067627, 16067640, 16067562, 16067664, 16067748, 16067569, 16067711, 16067555, 16067746, 16067903, 16067617, 16067630, 16067552, 16067738, 16067654, 16067736, 16067893, 16067545, 16067701, 16067607, 16067559, 16067728, 16067644, 16067542, 16067726, 16067535, 16067620, 16067883, 16067691, 16067597, 16067549, 16067718, 16067634, 16067716, 16067610, 16067873, 16067532, 16067525, 16067681, 16067587, 16067706, 16067600, 16067863, 16067708, 16067624, 16067515, 16067522, 16067671, 16067696, 16067577, 16067590, 16067505, 16067512, 16067614, 16067853, 16067698, 16067686, 16067661, 16067567, 16067539, 16067502, 16067495, 16067580, 16067604, 16067843, 16067676, 16067688, 16067651, 16067557, 16067529, 16067492, 16067485, 16067570, 16067666, 16067594, 16067641, 16067547, 16067833, 16067678, 16067519, 16067475, 16067482, 16067656, 16067631, 16067537, 16067823, 16067560, 16067668, 16067584, 16067465, 16067509, 16067646, 16067472, 16067621, 16067527, 16067658, 16067813, 16067455, 16067550, 16067499, 16067636, 16067462, 16067611, 16067517, 16067574, 16067445, 16067648, 16067540, 16067626, 16067803, 16067507, 16067489, 16067638, 16067435, 16067564, 16067601, 16067616, 16067452, 16067793, 16067530, 16067497, 16067479, 16067628, 16067425, 16067554, 16067591, 16067606, 16067783, 16067442, 16067487, 16067469, 16067618, 16067415, 16067520, 16067544, 16067596, 16067581, 16067477, 16067459, 16067773, 16067432, 16067608, 16067405, 16067510, 16067586, 16067534, 16067571, 16067763, 16067449, 16067422, 16067467, 16067598, 16067576, 16067395, 16067500, 16067524, 16067753, 16067439, 16067561, 16067588, 16067457, 16067385, 16067566, 16067412, 16067514, 16067743, 16067490, 16067429, 16067578, 16067447, 16067375, 16067551, 16067556, 16067402, 16067733, 16067419, 16067504, 16067480, 16067568, 16067437, 16067546, 16067541, 16067392, 16067365, 16067470, 16067723, 16067409, 16067558, 16067427, 16067494, 16067536, 16067531, 16067355, 16067460, 16067382, 16067399, 16067548, 16067713, 16067417, 16067484, 16067526, 16067345, 16067521, 16067389, 16067538, 16067372, 16067474, 16067516, 16067703, 16067407, 16067335, 16067450, 16067511, 16067379, 16067528, 16067464, 16067506, 16067362, 16067440, 16067693, 16067397, 16067369, 16067501, 16067454, 16067352, 16067518, 16067496, 16067430, 16067683, 16067325, 16067359, 16067387, 16067444, 16067342, 16067508, 16067491, 16067486, 16067420, 16067349, 16067315, 16067377, 16067673, 16067332, 16067498, 16067481, 16067434, 16067339, 16067476, 16067410, 16067305, 16067663, 16067367, 16067322, 16067488, 16067471, 16067424, 16067329, 16067466, 16067400, 16067295, 16067357, 16067312, 16067461, 16067478, 16067653, 16067319, 16067456, 16067390, 16067414, 16067347, 16067302, 16067451, 16067285, 16067309, 16067446, 16067468, 16067380, 16067404, 16067643, 16067337, 16067292, 16067441, 16067299, 16067436, 16067458, 16067275, 16067394, 16067633, 16067370, 16067327, 16067431, 16067282, 16067289, 16067426, 16067384, 16067623, 16067448, 16067360, 16067265, 16067317, 16067279, 16067416, 16067272, 16067374, 16067613, 16067421, 16067350, 16067438, 16067269, 16067406, 16067307, 16067364, 16067262, 16067603, 16067411, 16067340, 16067428, 16067259, 16067354, 16067396, 16067297, 16067401, 16067330, 16067287, 16067344, 16067593, 16067391, 16067386, 16067418, 16067320, 16067277, 16067334, 16067381, 16067376, 16067583, 16067310, 16067267, 16067371, 16067324, 16067300, 16067366, 16067408, 16067573, 16067361, 16067314, 16067356, 16067290, 16067398, 16067563, 16067304, 16067351, 16067346, 16067280, 16067388, 16067553, 16067294, 16067341, 16067336, 16067270, 16067284, 16067378, 16067543, 16067331, 16067260, 16067274, 16067368, 16067533, 16067326, 16067321, 16067264, 16067358, 16067311, 16067523, 16067316, 16067348, 16067301, 16067513, 16067306, 16067338, 16067291, 16067503, 16067296, 16067328, 16067281, 16067493, 16067286, 16067318, 16067271, 16067483, 16067308, 16067276, 16067473, 16067261, 16067298, 16067266, 16067463, 16067453, 16067288, 16067278, 16067443, 16067268, 16067433, 16067258, 16067423, 16067413, 16067403, 16067393, 16067383, 16067373, 16067363, 16067353, 16067343, 16067333, 16067323, 16067313, 16067303, 16067293, 16067283, 16067273, 16067263];
        $rsData = [16068264,16068261,16067248,16067249,16068272,16068263,16068276,16068265,16068290,16067238,16067239,16067254,16067247,16067251,16068262,16068266,16067255,16067253,16068280,16067228,16067244,16067229,16067237,16067241,16067252,16067218,16067245,16067256,16067234,16067243,16068270,16067219,16067227,16067231,16067242,16067208,16067235,16067233,16067246,16067224,16067209,16068260,16067221,16067217,16067225,16067223,16067198,16067232,16067214,16067199,16067236,16067250,16067207,16067211,16067215,16067213,16067222,16067204,16067188,16067240,16067189,16067226,16067197,16067203,16067205,16067201,16067212,16067230,16067178,16067194,16067187,16067179,16067216,16067193,16067195,16067191,16067220,16067168,16067202,16067169,16067184,16067177,16067183,16067206,16067210,16067158,16067181,16067185,16067192,16067174,16067159,16067167,16067173,16067148,16067171,16067200,16067196,16067182,16067164,16067175,16067157,16067149,16067138,16067161,16067190,16067186,16067163,16067172,16067165,16067154,16067147,16067128,16067151,16067180,16067176,16067139,16067153,16067162,16067137,16067155,16067144,16067118,16067166,16067170,16067141,16067129,16067152,16067143,16067134,16067127,16067145,16067108,16067156,16067119,16067131,16067160,16067142,16067124,16067098,16067146,16067133,16067109,16067117,16067150,16067135,16067121,16067132,16067114,16067099,16067136,16067088,16067123,16067111,16067107,16067122,16067140,16067125,16067089,16067104,16067101,16067097,16067126,16067078,16067113,16067112,16067130,16067079,16067094,16067091,16067087,16067115,16067116,16067103,16067068,16067120,16067102,16067069,16067081,16067077,16067106,16067105,16067084,16067093,16067058,16067092,16067071,16067067,16067110,16067059,16067096,16067074,16067095,16067082,16067048,16067083,16067061,16067057,16067100,16067064,16067085,16067049,16067086,16067072,16067038,16067073,16067051,16067047,16067054,16067075,16067090,16067076,16067039,16067062,16067063,16067037,16067028,16067041,16067080,16067065,16067044,16067066,16067029,16067053,16067052,16067018,16067027,16067031,16067070,16067056,16067034,16067055,16067019,16067008,16067043,16067042,16067046,16067017,16067021,16067060,16067024,16067045,16067009,16067032,16067036,16066998,16067011,16067007,16067033,16067050,16067014,16067035,16067022,16066999,16066988,16067026,16066997,16067023,16067040,16067001,16067004,16067012,16066989,16066978,16067025,16067016,16066987,16067013,16066991,16067030,16067002,16066994,16066979,16066968,16067006,16067015,16066977,16066992,16066984,16067003,16066981,16067020,16066969,16066958,16066996,16067005,16066982,16066967,16066993,16066974,16066959,16066971,16066948,16067010,16066986,16066995,16066972,16066983,16066949,16066957,16066964,16066961,16066938,16066976,16066985,16066962,16067000,16066973,16066939,16066954,16066947,16066951,16066928,16066966,16066952,16066975,16066963,16066929,16066944,16066990,16066937,16066941,16066918,16066953,16066965,16066942,16066956,16066919,16066934,16066927,16066980,16066931,16066908,16066943,16066909,16066955,16066932,16066946,16066924,16066917,16066921,16066970,16066898,16066933,16066899,16066945,16066914,16066936,16066922,16066911,16066907,16066923,16066960,16066888,16066889,16066904,16066926,16066912,16066935,16066897,16066901,16066913,16066950,16066878,16066879,16066916,16066894,16066902,16066925,16066903,16066868,16066940,16066887,16066891,16066906,16066869,16066915,16066884,16066893,16066892,16066930,16066858,16066881,16066877,16066896,16066905,16066859,16066883,16066874,16066848,16066920,16066882,16066871,16066867,16066886,16066895,16066849,16066838,16066873,16066910,16066876,16066864,16066857,16066872,16066861,16066885,16066828,16066839,16066863,16066866,16066900,16066847,16066854,16066875,16066862,16066851,16066818,16066853,16066829,16066856,16066890,16066837,16066865,16066841,16066852,16066844,16066808,16066843,16066846,16066880,16066819,16066855,16066827,16066831,16066842,16066833,16066834,16066836,16066870,16066798,16066809,16066845,16066817,16066821,16066832,16066824,16066823,16066826,16066860,16066799,16066788,16066835,16066807,16066811,16066822,16066816,16066814,16066813,16066797,16066789,16066778,16066850,16066825,16066801,16066812,16066806,16066804,16066803,16066787,16066768,16066779,16066791,16066802,16066815,16066840,16066796,16066793,16066794,16066777,16066758,16066781,16066769,16066792,16066786,16066830,16066805,16066767,16066783,16066748,16066784,16066771,16066759,16066782,16066776,16066820,16066757,16066795,16066738,16066761,16066773,16066774];
        $rsData = [16066772,16066766,16066749,16066747,16066810,16066728,16066785,16066751,16066764,16066763,16066762,16066756,16066737,16066800,16066739,16066741,16066775,16066718,16066754,16066753,16066746,16066752,16066727,16066790,16066731,16066765,16066729,16066744,16066743,16066708,16066717,16066742,16066736,16066780,16066721,16066755,16066734,16066719,16066698,16066733,16066707,16066726,16066770,16066732,16066711,16066745,16066724,16066709,16066688,16066723,16066697,16066760,16066716,16066701,16066722,16066735,16066714,16066699,16066678,16066687,16066713,16066750,16066706,16066712,16066704,16066689,16066725,16066691,16066668,16066677,16066740,16066703,16066696,16066694,16066702,16066679,16066715,16066667,16066658,16066681,16066730,16066693,16066684,16066686,16066692,16066669,16066705,16066657,16066648,16066671,16066720,16066674,16066683,16066659,16066676,16066682,16066647,16066695,16066638,16066661,16066710,16066649,16066666,16066673,16066672,16066664,16066637,16066685,16066700,16066651,16066628,16066639,16066656,16066663,16066662,16066654,16066675,16066627,16066690,16066618,16066641,16066629,16066646,16066653,16066652,16066644,16066617,16066665,16066680,16066619,16066631,16066608,16066636,16066643,16066634,16066607,16066655,16066642,16066670,16066621,16066609,16066598,16066633,16066626,16066624,16066597,16066645,16066632,16066660,16066611,16066599,16066616,16066588,16066623,16066614,16066587,16066635,16066622,16066601,16066650,16066589,16066606,16066578,16066613,16066604,16066577,16066625,16066612,16066591,16066579,16066596,16066568,16066603,16066640,16066567,16066581,16066594,16066602,16066615,16066569,16066586,16066558,16066593,16066630,16066557,16066571,16066584,16066559,16066605,16066592,16066576,16066548,16066620,16066561,16066583,16066547,16066549,16066574,16066566,16066582];
        $rsData = [16066595,16066610,16066551,16066538,16066573,16066537,1606653916066556,16066572,16066564,16066585,16066541,16066600,16066563,16066528,16066527,16066529,16066554,16066562,16066546,16066531,16066590,16066575,16066553,16066517,16066519,16066518,16066544,16066552,16066536,16066580,16066521,16066565,16066543,16066509,16066507,16066534,16066542,16066526,16066508,16066570,16066555,16066511,16066499,16066497,16066533,16066560,16066516,16066532,16066524,16066498,16066545,16066489,16066487,16066501,16066523,16066550,16066506,16066522,16066514,16066488,16066535,16066477,16066479,16066491,16066513,16066540,16066496,16066512,16066504,16066525,16066478,16066481,16066467,16066469,16066530,16066503,16066502,16066494,16066486,16066515,16066468,16066471,16066457,16066459,16066520,16066493,16066492,16066505,16066484,16066476,16066461,16066447,16066458,16066510,16066449,16066482,16066483,16066495,16066451,16066466,16066474,16066448,16066437,16066500,16066472,16066473,16066439,16066456,16066441,16066464,16066485,16066490,16066427,16066438,16066429,16066446,16066463,16066462,16066454,16066475,16066480,16066431,16066417,16066428,16066419,16066453,16066436,16066470,16066444,16066452,16066465,16066421,16066407,16066418,16066443,16066409,16066426,16066460,16066434,16066442,16066455,16066411,16066397,16066433,16066408,16066399,16066416,16066432,16066445,16066450,16066424,16066401,16066387,16066406,16066398,16066422,16066389,16066435,16066414,16066440,16066391,16066377,16066396,16066412,16066388,16066425,16066413,16066379,16066404,16066430,16066367,16066402,16066386,16066381,16066415,16066378,16066403,16066369,16066394,16066420,16066357,16066392,16066371,16066368,16066376,16066405,16066393,16066359,16066347,16066384,16066410,16066382,16066361,16066358,16066366,16066383,16066349,16066395];
        $rsData = [16066337,16066400,16066374,16066348,16066351,16066372,16066373,16066356,16066339,16066385,16066327,16066364,16066390,16066338,16066341,16066363,16066346,16066362,16066329,16066375,16066354,16066328,16066317,16066380,16066353,16066336,16066331,16066352,16066365,16066319,16066318,16066344,16066307,16066370,16066326,16066343,16066321,16066309,16066355,16066342,16066334,16066297,16066316,16066360,16066333,16066308,16066311,16066345,16066332,16066299,16066324,16066306,16066350,16066323,16066298,16066301,16066314,16066296,16066335,16066322,16066340,16066313,16066312,16066325,16066304,16066330,16066303,16066302,16066294,16066315,16066293,16066320,16066305,16066310,16066295,16066300,16068307,16068297,16068306,16066287,16068305,16068311,16068310,16066277,16068308,16068296,16068295,16066286,16068301,16068312,16068298,16066267,16068300,16066285,16066276,16068313,16066290,16068302,16066275,16066291];


        $where['id']   = ["in", $rsData];
        $apiCheckModel = new ApiCheckskuModel();
        $orderModel    = new EbayOrderModel();
        $orderExtModel = new EbayOrderExtModel();

        $rs = $apiCheckModel->where($where)->save(['status' => '2']);
        if ($rs === false) {
            echo json_encode(['status' => 0, 'msg' => 'api_check 状态修改失败']);
        }

        $ebayIdArr = $apiCheckModel->field('ebay_id')->where($where)->select();

        foreach ($ebayIdArr as $Eid) {
            $ebay_id = $Eid['ebay_id'];
            $orderModel->where(['ebay_id' => $ebay_id])->limit(1)->save(['ebay_status' => '2009']);
            //订单状态修改,更新修改时间
            $ext_info = $orderExtModel->where(['ebay_id' => $ebay_id])->find();
            $date     = date('Y-m-d H:i:s');
            if ($ext_info) {
                $orderExtModel->where(['ebay_id' => $ebay_id])->save([
                    'to_time_2009'  => $date,
                    'w_update_time' => $date,
                ]);
            } else {
                $orderExtModel->add([
                    'ebay_id'       => $ebay_id,
                    'to_time_2009'  => $date,
                    'w_update_time' => $date,
                    'w_add_time'    => $date
                ]);
            }
        }

        echo json_encode(['status' => 1, 'msg' => 'api_check 更新成功']);
        exit;
    }


    // 测试香港服务器  Task/ApiCheckSkuTask/TestCurl
    public function TestCurl(){
        $ebay_id_arr=[];

        $limit=(int)I('limit');
        $wms=(int)I('wms');

        if($limit<=0){
            $limit=1000;
        }

        for($i=$limit;$i>0;$i--){
            $ebay_id_arr[]=rand(10000000,99999999);
        }
        $data['ebay_id']=$ebay_id_arr;
        $data['action']= '123456';
        $data['sigin'] = md5('123456');


        if($wms==1){
            $postUrl='http://192.168.36.2/123.php';
        }else{
            $postUrl='http://47.90.38.119/123.php';
        }

        $str=http_build_query($data);
        echo strlen($str)."\n";
        $row = $this->curlPost($data,$postUrl);

    }

    //curl请求 abel
    private  function  curlPost($arr,$url){
        $ch=curl_init();
        curl_setopt($ch,CURLOPT_URL,$url);
        curl_setopt($ch,CURLOPT_POST,1);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
        //curl_setopt($ch,CURLOPT_HTTPHEADER,array('Expect:'));
        curl_setopt($ch,CURLOPT_POSTFIELDS,http_build_query($arr));
        curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,0);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT,300);
        curl_setopt($ch, CURLOPT_TIMEOUT, 300);
        $content=curl_exec($ch);
        curl_close($ch);

        print_r($content);

        if (curl_errno($ch)) {
            throw new \Exception('curl request failed: ' . curl_error($ch), curl_errno($ch));
        }
        return  json_decode($content,1);
    }


}